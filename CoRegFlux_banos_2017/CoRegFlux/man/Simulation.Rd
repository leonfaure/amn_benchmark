% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DFBAsimulationFunctions.R
\name{Simulation}
\alias{Simulation}
\title{Simulation using Dynamic Flux balance analysis over time as in \cite{varma}}
\usage{
Simulation(model, time = c(0, 1), metabolites, initial_biomass,
  biomass_flux_index = CoRegFlux::get_biomass_flux_position(model),
  coregnet = NULL, regulator_table = NULL, gene_table = NULL,
  gene_state_function = NULL, time_step_fba_bounds = NULL,
  softplus_parameter = 0, aliases = NULL)
}
\arguments{
\item{model}{An object of class modelOrg, the genome-scale metabolic model
(GEM).}

\item{time}{Timepoints at which the flux balance analysis
solution will be evaluated.}

\item{metabolites}{A data.frame containing the extraneous metabolites and the
initial concentrations}

\item{initial_biomass}{The value of the biomass at the beginning of the
simulation}

\item{biomass_flux_index}{index of the flux corresponding to the biomass
reaction.}

\item{coregnet}{Object of class CoRegNet, containing the regulatory and
coregulatory interactions.}

\item{regulator_table}{A data.frame containing 3 columns: "regulator",
"influence","expression" containing respectively the name of a TF present in
the CoRegNet object as a string, its influence in the condition of interest
as a numerical and an expression factor of 0 for a KO, or an integer >1 for
an overexpression}

\item{gene_table}{A data.frame containing 2 columns: "gene" and "expression"
containing respectively the name of a gene present in the modelOrg as a
string and an expression factor of 0 for a KO, or an integer >1 for
an overexpression}

\item{gene_state_function}{Function to obtain the gene state for a given
subset of gene}

\item{time_step_fba_bounds}{Bounds for the fba problem at each time point,
overrides any other form of constraining for a given flux.}

\item{softplus_parameter}{the softplus parameter identify through calibration}

\item{aliases}{Optional. A data.frame containing the gene names currently
used in the network under the colname "geneName" and the alias under the
colnames "alias"}
}
\value{
Return a list containing the simulation information such as the
objective_history, fluxes_history, met_concentration_history, biomass_history
}
\description{
Simulation using Dynamic Flux balance analysis over time as in \cite{varma}
}
\details{
The simulation function allows the user to run several kind of
simulations based on the provided arguments. When providing only the GEM,
time, initial biomass and the metabolites, a classical dFBA is carried out.
To integrate the gene expression to the GEM, the gene_state_function must
be provided while if the user wants to simulate a TF knock-out or
overexpression, then a coregnet object and the regulator table should also be
 provided. See the vignette and quick-user guide for more examples.
}
\examples{
data("SC_GRN_1")
data("SC_EXP_DATA")
data("SC_experiment_influence")
data("iMM904")
data("aliases_SC")
data("PredictedGeneState")

metabolites<-data.frame("name"=c("D-Glucose","Glycerol"),
                        "concentrations"=c(16,0))

result_without_any_constraint<-Simulation(iMM904,time=seq(1,10,by=1),
                   metabolites,
                   initial_biomass=0.45,
                   aliases = aliases_SC)

GeneState<-data.frame("Name"=names(PredictedGeneState),
                    "State"=unname(PredictedGeneState))

result<-Simulation(iMM904,time=seq(1,10,by=1),
                   metabolites,
                   initial_biomass=0.45,
                   gene_state_function=function(a,b){GeneState},
                   aliases = aliases_SC)

result$biomass_history
}
